{"ast":null,"code":"var _jsxFileName = \"/home/laboratoria84-am/Documentos/Laboratoria_Oralia/CDMX009-BurgerQueen/vegan-queen/src/App.js\";\nimport React, { useState } from \"react\"; //Router\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"; //Styles\n\nimport \"./components/utils/styles.css\"; //Components\n\nimport Main from \"./components/Main\";\nimport Role from \"./components/Role\";\nimport Waiter from \"./components/Waiter\";\nimport Chef from \"./components/Chef\";\nimport Menu from \"./components/Menu\";\nimport MenuBreakfast from \"./components/Breakfast\";\nimport MenuBurger from \"./components/Burger\";\nimport Orders from \"./components/Orders\";\nimport Order from \"./components/Order/Order.js\"; //Recordar que usamos arreglos\n//SI ya existe enonces a quantity agrega 1\n//Si NO existe entonces crea uno nuevo\n//JSON\n\nimport Data from \"./components/utils/Data/Data.json\";\n\nfunction App() {\n  const [order, setOrder] = useState([]);\n  /*{\n    cliente: \"\",\n    total: 0,\n    items: [],\n  }*/\n\n  const addingProductToOrder = product => {\n    // se busca en la order el item , si ya existe\n    if (order.find(item => item.name === product.productName)) {\n      //se crea una nueva order indicandole\n\n      /* const newOrder = order.map((productB) => {\n        //que si el producto es el mismo\n        if (product.productName === productB.productName) {\n          //retorne el primer producto aumentado en cantidad y costo actual\n          return {\n            ...productB,\n            quantity: productB.quantity + 1,\n            cost: productB.cost + product.cost,\n          };\n        }\n        return productB;*/\n      //});\n      console.log(\"el producto ya existe\"); //setOrder(newOrder);\n    } // si no existe el producto en la orden se agrega\n    else {\n        setOrder(order => [...order, {\n          name: product.productName,\n          quantity: 1,\n          cost: product.cost\n        }]);\n      }\n\n    console.log(order); //Se tiene que condicionar el adding\n    // si ya existe el producto solo se agrega en cantidad, si no existe se agrega el producto\n    //setOrder([...order, product]);\n  };\n\n  const deletingProduct = id => {\n    //const delProduct = order.filter((product) => product.id !== id);\n    console.log(\"delete\");\n  };\n\n  const dateAndTime = new Date().toLocaleString();\n  const date = new Date().toLocaleDateString(); //const time = new Date().toLocaleTimeString()\n\n  return /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/role\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Role, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"/waiter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Waiter, {\n    date: date,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"/chef\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Chef, {\n    date: date,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"/menu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Menu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"/menu-breakfast\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(MenuBreakfast, {\n    Data: Data.breakfast,\n    order: order,\n    addingProductToOrder: addingProductToOrder,\n    deletingProduct: deletingProduct,\n    counter: counter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Order, {\n    order: order,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"/menu-burger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(MenuBurger, {\n    Data: Data.burger,\n    order: order,\n    addingProductToOrder: addingProductToOrder,\n    deletingProduct: deletingProduct,\n    counter: counter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"/orders\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Orders, {\n    dateAndTime: dateAndTime,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Main, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  })))));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/laboratoria84-am/Documentos/Laboratoria_Oralia/CDMX009-BurgerQueen/vegan-queen/src/App.js"],"names":["React","useState","BrowserRouter","Router","Switch","Route","Main","Role","Waiter","Chef","Menu","MenuBreakfast","MenuBurger","Orders","Order","Data","App","order","setOrder","addingProductToOrder","product","find","item","name","productName","console","log","quantity","cost","deletingProduct","id","dateAndTime","Date","toLocaleString","date","toLocaleDateString","breakfast","counter","burger"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\n//Router\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\n//Styles\nimport \"./components/utils/styles.css\";\n\n//Components\nimport Main from \"./components/Main\";\nimport Role from \"./components/Role\";\nimport Waiter from \"./components/Waiter\";\nimport Chef from \"./components/Chef\";\nimport Menu from \"./components/Menu\";\nimport MenuBreakfast from \"./components/Breakfast\";\nimport MenuBurger from \"./components/Burger\";\nimport Orders from \"./components/Orders\";\nimport Order from \"./components/Order/Order.js\";\n\n//Recordar que usamos arreglos\n//SI ya existe enonces a quantity agrega 1\n//Si NO existe entonces crea uno nuevo\n\n//JSON\nimport Data from \"./components/utils/Data/Data.json\";\n\nfunction App() {\n  const [order, setOrder] = useState([]);\n\n  /*{\n    cliente: \"\",\n    total: 0,\n    items: [],\n  }*/\n\n  const addingProductToOrder = (product) => {\n    // se busca en la order el item , si ya existe\n    if (order.find((item) => item.name === product.productName)) {\n      //se crea una nueva order indicandole\n      /* const newOrder = order.map((productB) => {\n        //que si el producto es el mismo\n        if (product.productName === productB.productName) {\n          //retorne el primer producto aumentado en cantidad y costo actual\n          return {\n            ...productB,\n            quantity: productB.quantity + 1,\n            cost: productB.cost + product.cost,\n          };\n        }\n        return productB;*/\n\n      //});\n      console.log(\"el producto ya existe\");\n      //setOrder(newOrder);\n    }\n\n    // si no existe el producto en la orden se agrega\n    else {\n      setOrder((order) => [\n        ...order,\n        {\n          name: product.productName,\n          quantity: 1,\n          cost: product.cost,\n        },\n      ]);\n    }\n    console.log(order);\n    //Se tiene que condicionar el adding\n    // si ya existe el producto solo se agrega en cantidad, si no existe se agrega el producto\n\n    //setOrder([...order, product]);\n  };\n\n  const deletingProduct = (id) => {\n    //const delProduct = order.filter((product) => product.id !== id);\n    console.log(\"delete\");\n  };\n\n  const dateAndTime = new Date().toLocaleString();\n  const date = new Date().toLocaleDateString();\n  //const time = new Date().toLocaleTimeString()\n\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <Route path=\"/role\">\n            <Role />\n          </Route>\n          <Route path=\"/waiter\">\n            <Waiter date={date} />\n          </Route>\n          <Route path=\"/chef\">\n            <Chef date={date} />\n          </Route>\n          <Route path=\"/menu\">\n            <Menu />\n          </Route>\n          <Route path=\"/menu-breakfast\">\n            <MenuBreakfast\n              Data={Data.breakfast}\n              order={order}\n              addingProductToOrder={addingProductToOrder}\n              deletingProduct={deletingProduct}\n              counter={counter}\n            />\n            <Order order={order} />\n          </Route>\n          <Route path=\"/menu-burger\">\n            <MenuBurger\n              Data={Data.burger}\n              order={order}\n              addingProductToOrder={addingProductToOrder}\n              deletingProduct={deletingProduct}\n              counter={counter}\n            />\n          </Route>\n          <Route path=\"/orders\">\n            <Orders dateAndTime={dateAndTime} />\n          </Route>\n          <Route path=\"/\">\n            <Main />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}