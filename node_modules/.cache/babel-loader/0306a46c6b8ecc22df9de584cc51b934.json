{"ast":null,"code":"import _objectSpread from\"/home/laboratoria143-am/Escritorio/Laboratoria/CDMX009-BurgerQueen/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/laboratoria143-am/Escritorio/Laboratoria/CDMX009-BurgerQueen/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{db}from'../../firebase';import{toast,Slide}from'react-toastify';import'react-toastify/dist/ReactToastify.css';import{v4 as uuidv4}from'uuid';import Masonry from'react-masonry-css';toast.configure();function Ready(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),ready=_useState2[0],setReady=_useState2[1];var getDoneOrders=function getDoneOrders(){return db.collection('orders').where(\"status\",\"==\",\"done\").orderBy('date','desc').onSnapshot(function(querySnapshot){var docs=[];querySnapshot.forEach(function(doc){docs.push(_objectSpread(_objectSpread({},doc.data()),{},{id:doc.id}));});setReady(docs);});};useEffect(function(){var unsubscribe=getDoneOrders();return function(){unsubscribe();};},[]);//  deletes the order from firestore \nvar deleteOrder=function deleteOrder(id){db.collection('orders').doc(id).delete().then(function(){toast.success('Pedidos actualizados',{className:\"rounder-edges\",position:\"top-center\",autoClose:4000,hideProgressBar:true,closeOnClick:true,pauseOnHover:true,draggable:true,progress:undefined,transition:Slide});}).catch(function(){toast.error('Ocurrió un error, inténtalo de nuevo en un momento',{className:\"rounder-edges\",position:\"top-center\",autoClose:4000,hideProgressBar:true,closeOnClick:true,pauseOnHover:true,draggable:true,progress:undefined,transition:Slide});});};var readyOrders=ready.map(function(order){var difference=Date.now()-+order.date.toDate();// miliseconds between now and when the order was created\nvar color=Math.round(difference/1000/60);return/*#__PURE__*/React.createElement(\"div\",{className:color<=5?\"green-note\":color<=10?\"orange-note\":\"red-note\",key:order.id},/*#__PURE__*/React.createElement(\"h2\",{className:\"table\"},\" Mesa \",order.table),/*#__PURE__*/React.createElement(\"p\",null,\" Meserx: \",order.waiter),order.items.map(function(product){return/*#__PURE__*/React.createElement(\"div\",{className:\"products-on-note\",key:uuidv4()},/*#__PURE__*/React.createElement(\"ul\",{className:\"note-ul\"},/*#__PURE__*/React.createElement(\"li\",{className:\"product-name\"},product.item)),/*#__PURE__*/React.createElement(\"p\",{className:\"product-quantity\"},product.quantity));}),/*#__PURE__*/React.createElement(\"button\",{className:color<=5?\"green\":color<=10?\"orange\":\"red\",onClick:function onClick(){console.log(order);deleteOrder(order.id);}},\"Orden entregada!\"));});// breakpoints for responsive CSS Masonry\nvar breakpointColumnsObj={default:3,1100:3,700:2,500:1};if(ready.length<=0){return/*#__PURE__*/React.createElement(\"div\",{className:\"no-orders-message-container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"no-orders-message\"},\" A\\xFAn no hay pedidos para entregar :-) \"));}else{return/*#__PURE__*/React.createElement(\"div\",{className:\"container\"},/*#__PURE__*/React.createElement(Masonry,{breakpointCols:breakpointColumnsObj,className:\"my-masonry-grid\",columnClassName:\"my-masonry-grid_column\"},readyOrders));}}export default Ready;","map":{"version":3,"sources":["/home/laboratoria143-am/Escritorio/Laboratoria/CDMX009-BurgerQueen/my-app/src/components/ReadyToServe/index.js"],"names":["React","useState","useEffect","db","toast","Slide","v4","uuidv4","Masonry","configure","Ready","ready","setReady","getDoneOrders","collection","where","orderBy","onSnapshot","querySnapshot","docs","forEach","doc","push","data","id","unsubscribe","deleteOrder","delete","then","success","className","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","transition","catch","error","readyOrders","map","order","difference","Date","now","date","toDate","color","Math","round","table","waiter","items","product","item","quantity","console","log","breakpointColumnsObj","default","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect} from 'react'\nimport { db } from '../../firebase'\nimport { toast, Slide } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport { v4 as uuidv4 } from 'uuid'\nimport Masonry from 'react-masonry-css'\n\ntoast.configure()\n\nfunction Ready () {\n\n    const [ready, setReady] = useState([])\n\n    const getDoneOrders = () => {\n        return db\n        .collection('orders')\n        .where(\"status\", \"==\", \"done\")\n        .orderBy('date', 'desc')\n        .onSnapshot((querySnapshot) => {\n            const docs = []\n            querySnapshot.forEach((doc) => {\n                docs.push({...doc.data(), id: doc.id})\n            })\n            setReady(docs)\n        })\n    }\n\n    useEffect(() => {\n        let unsubscribe = getDoneOrders()\n\n        return () => {\n            unsubscribe()\n        }\n    }, [])\n\n    //  deletes the order from firestore \n    const deleteOrder = (id) => {\n        db\n        .collection('orders')\n        .doc(id)\n        .delete()\n        .then(() => {\n            toast.success('Pedidos actualizados', {\n                className: \"rounder-edges\",\n                position: \"top-center\",\n                autoClose: 4000,\n                hideProgressBar: true,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined,\n                transition: Slide\n                });\n        })\n        .catch(() => {\n            toast.error('Ocurrió un error, inténtalo de nuevo en un momento', {\n                className: \"rounder-edges\",\n                position: \"top-center\",\n                autoClose: 4000,\n                hideProgressBar: true,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined,\n                transition: Slide\n                });\n        })\n    }\n\n    let readyOrders = ready.map( order => {\n        let difference = Date.now() -  +order.date.toDate() // miliseconds between now and when the order was created\n        let color = Math.round((difference/1000)/60)\n\n        return (\n            <div \n                className={color <= 5 ? \"green-note\" : color <=10 ? \"orange-note\" : \"red-note\"} \n                key={order.id}\n            >\n                <h2 className=\"table\"> Mesa {order.table}</h2>\n                <p> Meserx: {order.waiter}</p>\n\n                    {order.items.map(product => {\n                        return (\n                            <div className=\"products-on-note\" key={uuidv4()} >\n                            <ul className=\"note-ul\">\n                                <li className=\"product-name\">{product.item}</li>\n                            </ul>\n                                <p className=\"product-quantity\">{product.quantity}</p>\n                            </div>\n                        )\n                    })}\n                    \n                <button \n                    className={color <= 5 ? \"green\" : color <=10 ? \"orange\" : \"red\"}\n                    onClick={() => {console.log(order); deleteOrder(order.id)}}>\n                        Orden entregada!\n                </button>\n            </div>\n        )\n    })\n\n     // breakpoints for responsive CSS Masonry\n     const breakpointColumnsObj = {\n        default: 3,\n        1100: 3,\n        700: 2,\n        500: 1\n      };\n\n      if (ready.length <=0) {\n        return (\n            <div className=\"no-orders-message-container\">\n                <div className=\"no-orders-message\"> Aún no hay pedidos para entregar :-) </div> \n            </div>\n        )\n    } else{\n    return(\n        <div className='container'>\n            <Masonry\n                breakpointCols={breakpointColumnsObj}\n                className=\"my-masonry-grid\"\n                columnClassName=\"my-masonry-grid_column\">\n                    {readyOrders}\n            </Masonry>\n        </div>\n    )\n}\n}\n\nexport default Ready; "]},"metadata":{},"sourceType":"module"}