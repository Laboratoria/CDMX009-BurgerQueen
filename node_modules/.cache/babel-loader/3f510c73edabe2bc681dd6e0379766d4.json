{"ast":null,"code":"var _jsxFileName = \"/home/laboratoria143-am/Escritorio/Laboratoria/CDMX009-BurgerQueen/my-app/src/components/ReadyToServe/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { db, auth } from '../../firebase';\nimport { v4 as uuidv4 } from 'uuid';\nimport Masonry from 'react-masonry-css'; // import '../KitchenNotes/Note.css'\n\nfunction Ready() {\n  const [ready, setReady] = useState([]);\n\n  const getDoneOrders = () => {\n    return db.collection('orders').where(\"status\", \"==\", \"done\").orderBy('date', 'desc').onSnapshot(querySnapshot => {\n      const docs = [];\n      querySnapshot.forEach(doc => {\n        docs.push({ ...doc.data(),\n          id: doc.id\n        });\n      });\n      setReady(docs);\n    });\n  };\n\n  useEffect(() => {\n    let unsubscribe = getDoneOrders();\n    return () => {\n      unsubscribe();\n    };\n  }, []); //  deletes the order from firestore \n\n  const deleteOrder = id => {\n    db.collection('orders').doc(id).delete().then(() => {\n      alert('Pedidos actualizados');\n      console.log(id);\n    }).catch(() => {\n      alert('Ocurrió un error, intentalo de nuevo en un momento...');\n    });\n  };\n\n  let readyOrders = ready.map(order => {\n    let difference = Date.now() - +order.date.toDate(); // miliseconds between now and when the order was created\n\n    let color = Math.round(difference / 1000 / 60);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: color <= 5 ? \"green-note\" : color <= 10 ? \"orange-note\" : \"red-note\",\n      key: order.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    }, \" Mesa \", order.table), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, \" Meserx: \", order.waiter), order.items.map(product => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"products-on-note\",\n        key: uuidv4(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"note-ul\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        className: \"product-name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 33\n        }\n      }, product.item)), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"product-quantity\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 33\n        }\n      }, product.quantity));\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: color <= 5 ? \"green\" : color <= 10 ? \"orange\" : \"red\",\n      onClick: () => {\n        console.log(order);\n        deleteOrder(order.id);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }, \"Orden lista!\"));\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, \" hola desde Ready! \");\n}\n\nexport default Ready;","map":{"version":3,"sources":["/home/laboratoria143-am/Escritorio/Laboratoria/CDMX009-BurgerQueen/my-app/src/components/ReadyToServe/index.js"],"names":["React","useState","useEffect","db","auth","v4","uuidv4","Masonry","Ready","ready","setReady","getDoneOrders","collection","where","orderBy","onSnapshot","querySnapshot","docs","forEach","doc","push","data","id","unsubscribe","deleteOrder","delete","then","alert","console","log","catch","readyOrders","map","order","difference","Date","now","date","toDate","color","Math","round","table","waiter","items","product","item","quantity"],"mappings":"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","sourcesContent":["import React, { useState, useEffect} from 'react'\nimport { db, auth } from '../../firebase'\nimport { v4 as uuidv4 } from 'uuid'\nimport Masonry from 'react-masonry-css'\n// import '../KitchenNotes/Note.css'\n\nfunction Ready () {\n\n    const [ready, setReady] = useState([])\n\n    const getDoneOrders = () => {\n        return db\n        .collection('orders')\n        .where(\"status\", \"==\", \"done\")\n        .orderBy('date', 'desc')\n        .onSnapshot((querySnapshot) => {\n            const docs = []\n            querySnapshot.forEach((doc) => {\n                docs.push({...doc.data(), id: doc.id})\n            })\n            setReady(docs)\n        })\n    }\n\n    useEffect(() => {\n        let unsubscribe = getDoneOrders()\n\n        return () => {\n            unsubscribe()\n        }\n    }, [])\n\n    //  deletes the order from firestore \n    const deleteOrder = (id) => {\n        db\n        .collection('orders')\n        .doc(id)\n        .delete()\n        .then(() => {\n            alert('Pedidos actualizados')\n            console.log(id)\n        })\n        .catch(() => {\n            alert('Ocurrió un error, intentalo de nuevo en un momento...')\n        })\n    }\n\n    let readyOrders = ready.map( order => {\n        let difference = Date.now() -  +order.date.toDate() // miliseconds between now and when the order was created\n        let color = Math.round((difference/1000)/60)\n\n        return (\n            <div \n                className={color <= 5 ? \"green-note\" : color <=10 ? \"orange-note\" : \"red-note\"} \n                key={order.id}\n            >\n                <h2 className=\"table\"> Mesa {order.table}</h2>\n                <p> Meserx: {order.waiter}</p>\n\n                    {order.items.map(product => {\n                        return (\n                            <div className=\"products-on-note\" key={uuidv4()} >\n                            <ul className=\"note-ul\">\n                                <li className=\"product-name\">{product.item}</li>\n                            </ul>\n                                <p className=\"product-quantity\">{product.quantity}</p>\n                            </div>\n                        )\n                    })}\n                    \n                <button \n                    className={color <= 5 ? \"green\" : color <=10 ? \"orange\" : \"red\"}\n                    onClick={() => {console.log(order); deleteOrder(order.id)}}>\n                        Orden lista!\n                </button>\n            </div>\n        )\n    })\n\n    return(\n        <div> hola desde Ready! </div>\n    )\n}\n\nexport default Ready; "]},"metadata":{},"sourceType":"module"}