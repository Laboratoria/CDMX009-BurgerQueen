{"ast":null,"code":"(function (f) {\n  if (typeof exports === \"object\" && typeof module !== \"undefined\") {\n    module.exports = f();\n  } else if (typeof define === \"function\" && define.amd) {\n    define([], f);\n  } else {\n    var g;\n\n    if (typeof window !== \"undefined\") {\n      g = window;\n    } else if (typeof global !== \"undefined\") {\n      g = global;\n    } else if (typeof self !== \"undefined\") {\n      g = self;\n    } else {\n      g = this;\n    }\n\n    g.vexDialog = f();\n  }\n})(function () {\n  var define, module, exports;\n  return function () {\n    function e(t, n, r) {\n      function s(o, u) {\n        if (!n[o]) {\n          if (!t[o]) {\n            var a = typeof require == \"function\" && require;\n            if (!u && a) return a(o, !0);\n            if (i) return i(o, !0);\n            var f = new Error(\"Cannot find module '\" + o + \"'\");\n            throw f.code = \"MODULE_NOT_FOUND\", f;\n          }\n\n          var l = n[o] = {\n            exports: {}\n          };\n          t[o][0].call(l.exports, function (e) {\n            var n = t[o][1][e];\n            return s(n ? n : e);\n          }, l, l.exports, e, t, n, r);\n        }\n\n        return n[o].exports;\n      }\n\n      var i = typeof require == \"function\" && require;\n\n      for (var o = 0; o < r.length; o++) s(r[o]);\n\n      return s;\n    }\n\n    return e;\n  }()({\n    1: [function (require, module, exports) {\n      'use strict';\n\n      function deepcopy(value) {\n        if (!(!!value && typeof value == 'object')) {\n          return value;\n        }\n\n        if (Object.prototype.toString.call(value) == '[object Date]') {\n          return new Date(value.getTime());\n        }\n\n        if (Array.isArray(value)) {\n          return value.map(deepcopy);\n        }\n\n        var result = {};\n        Object.keys(value).forEach(function (key) {\n          result[key] = deepcopy(value[key]);\n        });\n        return result;\n      }\n\n      module.exports = deepcopy;\n    }, {}],\n    2: [function (require, module, exports) {\n      /**\n       * Expose `parse`.\n       */\n      module.exports = parse;\n      /**\n       * Tests for browser support.\n       */\n\n      var innerHTMLBug = false;\n      var bugTestDiv;\n\n      if (typeof document !== 'undefined') {\n        bugTestDiv = document.createElement('div'); // Setup\n\n        bugTestDiv.innerHTML = '  <link/><table></table><a href=\"/a\">a</a><input type=\"checkbox\"/>'; // Make sure that link elements get serialized correctly by innerHTML\n        // This requires a wrapper element in IE\n\n        innerHTMLBug = !bugTestDiv.getElementsByTagName('link').length;\n        bugTestDiv = undefined;\n      }\n      /**\n       * Wrap map from jquery.\n       */\n\n\n      var map = {\n        legend: [1, '<fieldset>', '</fieldset>'],\n        tr: [2, '<table><tbody>', '</tbody></table>'],\n        col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],\n        // for script/link/style tags to work in IE6-8, you have to wrap\n        // in a div with a non-whitespace character in front, ha!\n        _default: innerHTMLBug ? [1, 'X<div>', '</div>'] : [0, '', '']\n      };\n      map.td = map.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n      map.option = map.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n      map.thead = map.tbody = map.colgroup = map.caption = map.tfoot = [1, '<table>', '</table>'];\n      map.polyline = map.ellipse = map.polygon = map.circle = map.text = map.line = map.path = map.rect = map.g = [1, '<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\">', '</svg>'];\n      /**\n       * Parse `html` and return a DOM Node instance, which could be a TextNode,\n       * HTML DOM Node of some kind (<div> for example), or a DocumentFragment\n       * instance, depending on the contents of the `html` string.\n       *\n       * @param {String} html - HTML string to \"domify\"\n       * @param {Document} doc - The `document` instance to create the Node for\n       * @return {DOMNode} the TextNode, DOM Node, or DocumentFragment instance\n       * @api private\n       */\n\n      function parse(html, doc) {\n        if ('string' != typeof html) throw new TypeError('String expected'); // default to the global `document` object\n\n        if (!doc) doc = document; // tag name\n\n        var m = /<([\\w:]+)/.exec(html);\n        if (!m) return doc.createTextNode(html);\n        html = html.replace(/^\\s+|\\s+$/g, ''); // Remove leading/trailing whitespace\n\n        var tag = m[1]; // body support\n\n        if (tag == 'body') {\n          var el = doc.createElement('html');\n          el.innerHTML = html;\n          return el.removeChild(el.lastChild);\n        } // wrap map\n\n\n        var wrap = map[tag] || map._default;\n        var depth = wrap[0];\n        var prefix = wrap[1];\n        var suffix = wrap[2];\n        var el = doc.createElement('div');\n        el.innerHTML = prefix + html + suffix;\n\n        while (depth--) el = el.lastChild; // one element\n\n\n        if (el.firstChild == el.lastChild) {\n          return el.removeChild(el.firstChild);\n        } // several elements\n\n\n        var fragment = doc.createDocumentFragment();\n\n        while (el.firstChild) {\n          fragment.appendChild(el.removeChild(el.firstChild));\n        }\n\n        return fragment;\n      }\n    }, {}],\n    3: [function (require, module, exports) {\n      // get successful control from form and assemble into object\n      // http://www.w3.org/TR/html401/interact/forms.html#h-17.13.2\n      // types which indicate a submit action and are not successful controls\n      // these will be ignored\n      var k_r_submitter = /^(?:submit|button|image|reset|file)$/i; // node names which could be successful controls\n\n      var k_r_success_contrls = /^(?:input|select|textarea|keygen)/i; // Matches bracket notation.\n\n      var brackets = /(\\[[^\\[\\]]*\\])/g; // serializes form fields\n      // @param form MUST be an HTMLForm element\n      // @param options is an optional argument to configure the serialization. Default output\n      // with no options specified is a url encoded string\n      //    - hash: [true | false] Configure the output type. If true, the output will\n      //    be a js object.\n      //    - serializer: [function] Optional serializer function to override the default one.\n      //    The function takes 3 arguments (result, key, value) and should return new result\n      //    hash and url encoded str serializers are provided with this module\n      //    - disabled: [true | false]. If true serialize disabled fields.\n      //    - empty: [true | false]. If true serialize empty fields\n\n      function serialize(form, options) {\n        if (typeof options != 'object') {\n          options = {\n            hash: !!options\n          };\n        } else if (options.hash === undefined) {\n          options.hash = true;\n        }\n\n        var result = options.hash ? {} : '';\n        var serializer = options.serializer || (options.hash ? hash_serializer : str_serialize);\n        var elements = form && form.elements ? form.elements : []; //Object store each radio and set if it's empty or not\n\n        var radio_store = Object.create(null);\n\n        for (var i = 0; i < elements.length; ++i) {\n          var element = elements[i]; // ingore disabled fields\n\n          if (!options.disabled && element.disabled || !element.name) {\n            continue;\n          } // ignore anyhting that is not considered a success field\n\n\n          if (!k_r_success_contrls.test(element.nodeName) || k_r_submitter.test(element.type)) {\n            continue;\n          }\n\n          var key = element.name;\n          var val = element.value; // we can't just use element.value for checkboxes cause some browsers lie to us\n          // they say \"on\" for value when the box isn't checked\n\n          if ((element.type === 'checkbox' || element.type === 'radio') && !element.checked) {\n            val = undefined;\n          } // If we want empty elements\n\n\n          if (options.empty) {\n            // for checkbox\n            if (element.type === 'checkbox' && !element.checked) {\n              val = '';\n            } // for radio\n\n\n            if (element.type === 'radio') {\n              if (!radio_store[element.name] && !element.checked) {\n                radio_store[element.name] = false;\n              } else if (element.checked) {\n                radio_store[element.name] = true;\n              }\n            } // if options empty is true, continue only if its radio\n\n\n            if (!val && element.type == 'radio') {\n              continue;\n            }\n          } else {\n            // value-less fields are ignored unless options.empty is true\n            if (!val) {\n              continue;\n            }\n          } // multi select boxes\n\n\n          if (element.type === 'select-multiple') {\n            val = [];\n            var selectOptions = element.options;\n            var isSelectedOptions = false;\n\n            for (var j = 0; j < selectOptions.length; ++j) {\n              var option = selectOptions[j];\n              var allowedEmpty = options.empty && !option.value;\n              var hasValue = option.value || allowedEmpty;\n\n              if (option.selected && hasValue) {\n                isSelectedOptions = true; // If using a hash serializer be sure to add the\n                // correct notation for an array in the multi-select\n                // context. Here the name attribute on the select element\n                // might be missing the trailing bracket pair. Both names\n                // \"foo\" and \"foo[]\" should be arrays.\n\n                if (options.hash && key.slice(key.length - 2) !== '[]') {\n                  result = serializer(result, key + '[]', option.value);\n                } else {\n                  result = serializer(result, key, option.value);\n                }\n              }\n            } // Serialize if no selected options and options.empty is true\n\n\n            if (!isSelectedOptions && options.empty) {\n              result = serializer(result, key, '');\n            }\n\n            continue;\n          }\n\n          result = serializer(result, key, val);\n        } // Check for all empty radio buttons and serialize them with key=\"\"\n\n\n        if (options.empty) {\n          for (var key in radio_store) {\n            if (!radio_store[key]) {\n              result = serializer(result, key, '');\n            }\n          }\n        }\n\n        return result;\n      }\n\n      function parse_keys(string) {\n        var keys = [];\n        var prefix = /^([^\\[\\]]*)/;\n        var children = new RegExp(brackets);\n        var match = prefix.exec(string);\n\n        if (match[1]) {\n          keys.push(match[1]);\n        }\n\n        while ((match = children.exec(string)) !== null) {\n          keys.push(match[1]);\n        }\n\n        return keys;\n      }\n\n      function hash_assign(result, keys, value) {\n        if (keys.length === 0) {\n          result = value;\n          return result;\n        }\n\n        var key = keys.shift();\n        var between = key.match(/^\\[(.+?)\\]$/);\n\n        if (key === '[]') {\n          result = result || [];\n\n          if (Array.isArray(result)) {\n            result.push(hash_assign(null, keys, value));\n          } else {\n            // This might be the result of bad name attributes like \"[][foo]\",\n            // in this case the original `result` object will already be\n            // assigned to an object literal. Rather than coerce the object to\n            // an array, or cause an exception the attribute \"_values\" is\n            // assigned as an array.\n            result._values = result._values || [];\n\n            result._values.push(hash_assign(null, keys, value));\n          }\n\n          return result;\n        } // Key is an attribute name and can be assigned directly.\n\n\n        if (!between) {\n          result[key] = hash_assign(result[key], keys, value);\n        } else {\n          var string = between[1]; // +var converts the variable into a number\n          // better than parseInt because it doesn't truncate away trailing\n          // letters and actually fails if whole thing is not a number\n\n          var index = +string; // If the characters between the brackets is not a number it is an\n          // attribute name and can be assigned directly.\n\n          if (isNaN(index)) {\n            result = result || {};\n            result[string] = hash_assign(result[string], keys, value);\n          } else {\n            result = result || [];\n            result[index] = hash_assign(result[index], keys, value);\n          }\n        }\n\n        return result;\n      } // Object/hash encoding serializer.\n\n\n      function hash_serializer(result, key, value) {\n        var matches = key.match(brackets); // Has brackets? Use the recursive assignment function to walk the keys,\n        // construct any missing objects in the result tree and make the assignment\n        // at the end of the chain.\n\n        if (matches) {\n          var keys = parse_keys(key);\n          hash_assign(result, keys, value);\n        } else {\n          // Non bracket notation can make assignments directly.\n          var existing = result[key]; // If the value has been assigned already (for instance when a radio and\n          // a checkbox have the same name attribute) convert the previous value\n          // into an array before pushing into it.\n          //\n          // NOTE: If this requirement were removed all hash creation and\n          // assignment could go through `hash_assign`.\n\n          if (existing) {\n            if (!Array.isArray(existing)) {\n              result[key] = [existing];\n            }\n\n            result[key].push(value);\n          } else {\n            result[key] = value;\n          }\n        }\n\n        return result;\n      } // urlform encoding serializer\n\n\n      function str_serialize(result, key, value) {\n        // encode newlines as \\r\\n cause the html spec says so\n        value = value.replace(/(\\r)?\\n/g, '\\r\\n');\n        value = encodeURIComponent(value); // spaces should be '+' rather than '%20'.\n\n        value = value.replace(/%20/g, '+');\n        return result + (result ? '&' : '') + encodeURIComponent(key) + '=' + value;\n      }\n\n      module.exports = serialize;\n    }, {}],\n    4: [function (require, module, exports) {\n      var domify = require('domify');\n\n      var serialize = require('form-serialize');\n\n      var cloneDeep = require('deep-clone-simple'); // Build DOM elements for the structure of the dialog\n\n\n      var buildDialogForm = function buildDialogForm(options) {\n        var form = document.createElement('form');\n        form.classList.add('vex-dialog-form');\n        var message = document.createElement('div');\n        message.classList.add('vex-dialog-message');\n        message.appendChild(options.message instanceof window.Node ? options.message : domify(options.message));\n        var input = document.createElement('div');\n        input.classList.add('vex-dialog-input');\n        input.appendChild(options.input instanceof window.Node ? options.input : domify(options.input));\n        form.appendChild(message);\n        form.appendChild(input);\n        return form;\n      }; // Take an array of buttons (see the default buttons below) and turn them into DOM elements\n\n\n      var buttonsToDOM = function buttonsToDOM(buttons) {\n        var domButtons = document.createElement('div');\n        domButtons.classList.add('vex-dialog-buttons');\n\n        for (var i = 0; i < buttons.length; i++) {\n          var button = buttons[i];\n          var domButton = document.createElement('button');\n          domButton.type = button.type;\n          domButton.textContent = button.text;\n          domButton.className = button.className;\n          domButton.classList.add('vex-dialog-button');\n\n          if (i === 0) {\n            domButton.classList.add('vex-first');\n          } else if (i === buttons.length - 1) {\n            domButton.classList.add('vex-last');\n          } // Attach click listener to button with closure\n\n\n          (function (button) {\n            domButton.addEventListener('click', function (e) {\n              if (button.click) {\n                button.click.call(this, e);\n              }\n            }.bind(this));\n          }).bind(this)(button);\n          domButtons.appendChild(domButton);\n        }\n\n        return domButtons;\n      };\n\n      var plugin = function plugin(vex) {\n        // Define the API first\n        var dialog = {\n          // Plugin name\n          name: 'dialog',\n          // Open\n          open: function open(opts) {\n            var options = Object.assign({}, cloneDeep(this.defaultOptions), opts); // `message` is unsafe internally, so translate\n            // safe default: HTML-escape the message before passing it through\n\n            if (options.unsafeMessage && !options.message) {\n              options.message = options.unsafeMessage;\n            } else if (options.message) {\n              options.message = vex._escapeHtml(options.message);\n            } // Build the form from the options\n\n\n            var form = options.unsafeContent = buildDialogForm(options); // Open the dialog\n\n            var dialogInstance = vex.open(options);\n\n            if (options.yesText !== '') {\n              options.buttons[0].text = options.yesText;\n            }\n\n            if (options.noText !== '') {\n              options.buttons[1].text = options.noText;\n            } // Quick comment - these options and appending buttons and everything\n            // would preferably be done _before_ opening the dialog. However, since\n            // they rely on the context of the vex instance, we have to do them\n            // after. A potential future fix would be to differentiate between\n            // a \"created\" vex instance and an \"opened\" vex instance, so any actions\n            // that rely on the specific context of the instance can do their stuff\n            // before opening the dialog on the page.\n            // Override the before close callback to also pass the value of the form\n\n\n            var beforeClose = options.beforeClose && options.beforeClose.bind(dialogInstance);\n\n            dialogInstance.options.beforeClose = function dialogBeforeClose() {\n              // Only call the callback once - when the validation in beforeClose, if present, is true\n              var shouldClose = beforeClose ? beforeClose() : true;\n\n              if (shouldClose) {\n                options.callback(this.value || false);\n              } // Return the result of beforeClose() to vex\n\n\n              return shouldClose;\n            }.bind(dialogInstance); // Append buttons to form with correct context\n\n\n            form.appendChild(buttonsToDOM.call(dialogInstance, options.buttons)); // Attach form to instance\n\n            dialogInstance.form = form; // Add submit listener to form\n\n            form.addEventListener('submit', options.onSubmit.bind(dialogInstance)); // Optionally focus the first input in the form\n\n            if (options.focusFirstInput) {\n              var el = dialogInstance.contentEl.querySelector('button, input, select, textarea');\n\n              if (el) {\n                el.focus();\n              }\n            } // For chaining\n\n\n            return dialogInstance;\n          },\n          // Alert\n          alert: function (options) {\n            // Allow string as message\n            if (typeof options === 'string') {\n              options = {\n                message: options\n              };\n            }\n\n            options = Object.assign({}, cloneDeep(this.defaultOptions), cloneDeep(this.defaultAlertOptions), options);\n            return this.open(options);\n          },\n          // Confirm\n          confirm: function (options) {\n            if (typeof options !== 'object' || typeof options.callback !== 'function') {\n              throw new Error('dialog.confirm(options) requires options.callback.');\n            }\n\n            options = Object.assign({}, cloneDeep(this.defaultOptions), cloneDeep(this.defaultConfirmOptions), options);\n            return this.open(options);\n          },\n          // Prompt\n          prompt: function (options) {\n            if (typeof options !== 'object' || typeof options.callback !== 'function') {\n              throw new Error('dialog.prompt(options) requires options.callback.');\n            }\n\n            var defaults = Object.assign({}, cloneDeep(this.defaultOptions), cloneDeep(this.defaultPromptOptions));\n            var dynamicDefaults = {\n              unsafeMessage: '<label for=\"vex\">' + vex._escapeHtml(options.label || defaults.label) + '</label>',\n              input: '<input name=\"vex\" type=\"text\" class=\"vex-dialog-prompt-input\" placeholder=\"' + vex._escapeHtml(options.placeholder || defaults.placeholder) + '\" value=\"' + vex._escapeHtml(options.value || defaults.value) + '\" />'\n            };\n            options = Object.assign(defaults, dynamicDefaults, options); // Pluck the value of the \"vex\" input field as the return value for prompt's callback\n            // More closely mimics \"window.prompt\" in that a single string is returned\n\n            var callback = options.callback;\n\n            options.callback = function promptCallback(value) {\n              if (typeof value === 'object') {\n                var keys = Object.keys(value);\n                value = keys.length ? value[keys[0]] : '';\n              }\n\n              callback(value);\n            };\n\n            return this.open(options);\n          }\n        }; // Now define any additional data that's not the direct dialog API\n\n        dialog.buttons = {\n          YES: {\n            text: 'OK',\n            type: 'submit',\n            className: 'vex-dialog-button-primary',\n            click: function yesClick() {\n              this.value = true;\n            }\n          },\n          NO: {\n            text: 'Cancel',\n            type: 'button',\n            className: 'vex-dialog-button-secondary',\n            click: function noClick() {\n              this.value = false;\n              this.close();\n            }\n          }\n        };\n        dialog.defaultOptions = {\n          callback: function () {},\n          afterOpen: function () {},\n          message: '',\n          input: '',\n          yesText: '',\n          noText: '',\n          buttons: [dialog.buttons.YES, dialog.buttons.NO],\n          showCloseButton: false,\n          onSubmit: function onDialogSubmit(e) {\n            e.preventDefault();\n\n            if (this.options.input) {\n              this.value = serialize(this.form, {\n                hash: true\n              });\n            }\n\n            return this.close();\n          },\n          focusFirstInput: true\n        };\n        dialog.defaultAlertOptions = {\n          buttons: [dialog.buttons.YES]\n        };\n        dialog.defaultPromptOptions = {\n          label: 'Prompt:',\n          placeholder: '',\n          value: ''\n        };\n        dialog.defaultConfirmOptions = {};\n        return dialog;\n      };\n\n      module.exports = plugin;\n    }, {\n      \"deep-clone-simple\": 1,\n      \"domify\": 2,\n      \"form-serialize\": 3\n    }]\n  }, {}, [4])(4);\n});","map":{"version":3,"sources":["/home/laboratoria143-am/Escritorio/Laboratoria/node_modules/vex-dialog/dist/vex.dialog.js"],"names":["f","exports","module","define","amd","g","window","global","self","vexDialog","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","deepcopy","value","Object","prototype","toString","Date","getTime","Array","isArray","map","result","keys","forEach","key","parse","innerHTMLBug","bugTestDiv","document","createElement","innerHTML","getElementsByTagName","undefined","legend","tr","col","_default","td","th","option","optgroup","thead","tbody","colgroup","caption","tfoot","polyline","ellipse","polygon","circle","text","line","path","rect","html","doc","TypeError","m","exec","createTextNode","replace","tag","el","removeChild","lastChild","wrap","depth","prefix","suffix","firstChild","fragment","createDocumentFragment","appendChild","k_r_submitter","k_r_success_contrls","brackets","serialize","form","options","hash","serializer","hash_serializer","str_serialize","elements","radio_store","create","element","disabled","name","test","nodeName","type","val","checked","empty","selectOptions","isSelectedOptions","j","allowedEmpty","hasValue","selected","slice","parse_keys","string","children","RegExp","match","push","hash_assign","shift","between","_values","index","isNaN","matches","existing","encodeURIComponent","domify","cloneDeep","buildDialogForm","classList","add","message","Node","input","buttonsToDOM","buttons","domButtons","button","domButton","textContent","className","addEventListener","click","bind","plugin","vex","dialog","open","opts","assign","defaultOptions","unsafeMessage","_escapeHtml","unsafeContent","dialogInstance","yesText","noText","beforeClose","dialogBeforeClose","shouldClose","callback","onSubmit","focusFirstInput","contentEl","querySelector","focus","alert","defaultAlertOptions","confirm","defaultConfirmOptions","prompt","defaults","defaultPromptOptions","dynamicDefaults","label","placeholder","promptCallback","YES","yesClick","NO","noClick","close","afterOpen","showCloseButton","onDialogSubmit","preventDefault"],"mappings":"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","sourcesContent":["(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.vexDialog = f()}})(function(){var define,module,exports;return (function(){function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}return e})()({1:[function(require,module,exports){\n'use strict';\n\nfunction deepcopy(value) {\n  if (!(!!value && typeof value == 'object')) {\n    return value;\n  }\n  if (Object.prototype.toString.call(value) == '[object Date]') {\n    return new Date(value.getTime());\n  }\n  if (Array.isArray(value)) {\n    return value.map(deepcopy);\n  }\n  var result = {};\n  Object.keys(value).forEach(\n    function(key) { result[key] = deepcopy(value[key]); });\n  return result;\n}\n\nmodule.exports = deepcopy;\n\n},{}],2:[function(require,module,exports){\n\n/**\n * Expose `parse`.\n */\n\nmodule.exports = parse;\n\n/**\n * Tests for browser support.\n */\n\nvar innerHTMLBug = false;\nvar bugTestDiv;\nif (typeof document !== 'undefined') {\n  bugTestDiv = document.createElement('div');\n  // Setup\n  bugTestDiv.innerHTML = '  <link/><table></table><a href=\"/a\">a</a><input type=\"checkbox\"/>';\n  // Make sure that link elements get serialized correctly by innerHTML\n  // This requires a wrapper element in IE\n  innerHTMLBug = !bugTestDiv.getElementsByTagName('link').length;\n  bugTestDiv = undefined;\n}\n\n/**\n * Wrap map from jquery.\n */\n\nvar map = {\n  legend: [1, '<fieldset>', '</fieldset>'],\n  tr: [2, '<table><tbody>', '</tbody></table>'],\n  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],\n  // for script/link/style tags to work in IE6-8, you have to wrap\n  // in a div with a non-whitespace character in front, ha!\n  _default: innerHTMLBug ? [1, 'X<div>', '</div>'] : [0, '', '']\n};\n\nmap.td =\nmap.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\nmap.option =\nmap.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\nmap.thead =\nmap.tbody =\nmap.colgroup =\nmap.caption =\nmap.tfoot = [1, '<table>', '</table>'];\n\nmap.polyline =\nmap.ellipse =\nmap.polygon =\nmap.circle =\nmap.text =\nmap.line =\nmap.path =\nmap.rect =\nmap.g = [1, '<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\">','</svg>'];\n\n/**\n * Parse `html` and return a DOM Node instance, which could be a TextNode,\n * HTML DOM Node of some kind (<div> for example), or a DocumentFragment\n * instance, depending on the contents of the `html` string.\n *\n * @param {String} html - HTML string to \"domify\"\n * @param {Document} doc - The `document` instance to create the Node for\n * @return {DOMNode} the TextNode, DOM Node, or DocumentFragment instance\n * @api private\n */\n\nfunction parse(html, doc) {\n  if ('string' != typeof html) throw new TypeError('String expected');\n\n  // default to the global `document` object\n  if (!doc) doc = document;\n\n  // tag name\n  var m = /<([\\w:]+)/.exec(html);\n  if (!m) return doc.createTextNode(html);\n\n  html = html.replace(/^\\s+|\\s+$/g, ''); // Remove leading/trailing whitespace\n\n  var tag = m[1];\n\n  // body support\n  if (tag == 'body') {\n    var el = doc.createElement('html');\n    el.innerHTML = html;\n    return el.removeChild(el.lastChild);\n  }\n\n  // wrap map\n  var wrap = map[tag] || map._default;\n  var depth = wrap[0];\n  var prefix = wrap[1];\n  var suffix = wrap[2];\n  var el = doc.createElement('div');\n  el.innerHTML = prefix + html + suffix;\n  while (depth--) el = el.lastChild;\n\n  // one element\n  if (el.firstChild == el.lastChild) {\n    return el.removeChild(el.firstChild);\n  }\n\n  // several elements\n  var fragment = doc.createDocumentFragment();\n  while (el.firstChild) {\n    fragment.appendChild(el.removeChild(el.firstChild));\n  }\n\n  return fragment;\n}\n\n},{}],3:[function(require,module,exports){\n// get successful control from form and assemble into object\n// http://www.w3.org/TR/html401/interact/forms.html#h-17.13.2\n\n// types which indicate a submit action and are not successful controls\n// these will be ignored\nvar k_r_submitter = /^(?:submit|button|image|reset|file)$/i;\n\n// node names which could be successful controls\nvar k_r_success_contrls = /^(?:input|select|textarea|keygen)/i;\n\n// Matches bracket notation.\nvar brackets = /(\\[[^\\[\\]]*\\])/g;\n\n// serializes form fields\n// @param form MUST be an HTMLForm element\n// @param options is an optional argument to configure the serialization. Default output\n// with no options specified is a url encoded string\n//    - hash: [true | false] Configure the output type. If true, the output will\n//    be a js object.\n//    - serializer: [function] Optional serializer function to override the default one.\n//    The function takes 3 arguments (result, key, value) and should return new result\n//    hash and url encoded str serializers are provided with this module\n//    - disabled: [true | false]. If true serialize disabled fields.\n//    - empty: [true | false]. If true serialize empty fields\nfunction serialize(form, options) {\n    if (typeof options != 'object') {\n        options = { hash: !!options };\n    }\n    else if (options.hash === undefined) {\n        options.hash = true;\n    }\n\n    var result = (options.hash) ? {} : '';\n    var serializer = options.serializer || ((options.hash) ? hash_serializer : str_serialize);\n\n    var elements = form && form.elements ? form.elements : [];\n\n    //Object store each radio and set if it's empty or not\n    var radio_store = Object.create(null);\n\n    for (var i=0 ; i<elements.length ; ++i) {\n        var element = elements[i];\n\n        // ingore disabled fields\n        if ((!options.disabled && element.disabled) || !element.name) {\n            continue;\n        }\n        // ignore anyhting that is not considered a success field\n        if (!k_r_success_contrls.test(element.nodeName) ||\n            k_r_submitter.test(element.type)) {\n            continue;\n        }\n\n        var key = element.name;\n        var val = element.value;\n\n        // we can't just use element.value for checkboxes cause some browsers lie to us\n        // they say \"on\" for value when the box isn't checked\n        if ((element.type === 'checkbox' || element.type === 'radio') && !element.checked) {\n            val = undefined;\n        }\n\n        // If we want empty elements\n        if (options.empty) {\n            // for checkbox\n            if (element.type === 'checkbox' && !element.checked) {\n                val = '';\n            }\n\n            // for radio\n            if (element.type === 'radio') {\n                if (!radio_store[element.name] && !element.checked) {\n                    radio_store[element.name] = false;\n                }\n                else if (element.checked) {\n                    radio_store[element.name] = true;\n                }\n            }\n\n            // if options empty is true, continue only if its radio\n            if (!val && element.type == 'radio') {\n                continue;\n            }\n        }\n        else {\n            // value-less fields are ignored unless options.empty is true\n            if (!val) {\n                continue;\n            }\n        }\n\n        // multi select boxes\n        if (element.type === 'select-multiple') {\n            val = [];\n\n            var selectOptions = element.options;\n            var isSelectedOptions = false;\n            for (var j=0 ; j<selectOptions.length ; ++j) {\n                var option = selectOptions[j];\n                var allowedEmpty = options.empty && !option.value;\n                var hasValue = (option.value || allowedEmpty);\n                if (option.selected && hasValue) {\n                    isSelectedOptions = true;\n\n                    // If using a hash serializer be sure to add the\n                    // correct notation for an array in the multi-select\n                    // context. Here the name attribute on the select element\n                    // might be missing the trailing bracket pair. Both names\n                    // \"foo\" and \"foo[]\" should be arrays.\n                    if (options.hash && key.slice(key.length - 2) !== '[]') {\n                        result = serializer(result, key + '[]', option.value);\n                    }\n                    else {\n                        result = serializer(result, key, option.value);\n                    }\n                }\n            }\n\n            // Serialize if no selected options and options.empty is true\n            if (!isSelectedOptions && options.empty) {\n                result = serializer(result, key, '');\n            }\n\n            continue;\n        }\n\n        result = serializer(result, key, val);\n    }\n\n    // Check for all empty radio buttons and serialize them with key=\"\"\n    if (options.empty) {\n        for (var key in radio_store) {\n            if (!radio_store[key]) {\n                result = serializer(result, key, '');\n            }\n        }\n    }\n\n    return result;\n}\n\nfunction parse_keys(string) {\n    var keys = [];\n    var prefix = /^([^\\[\\]]*)/;\n    var children = new RegExp(brackets);\n    var match = prefix.exec(string);\n\n    if (match[1]) {\n        keys.push(match[1]);\n    }\n\n    while ((match = children.exec(string)) !== null) {\n        keys.push(match[1]);\n    }\n\n    return keys;\n}\n\nfunction hash_assign(result, keys, value) {\n    if (keys.length === 0) {\n        result = value;\n        return result;\n    }\n\n    var key = keys.shift();\n    var between = key.match(/^\\[(.+?)\\]$/);\n\n    if (key === '[]') {\n        result = result || [];\n\n        if (Array.isArray(result)) {\n            result.push(hash_assign(null, keys, value));\n        }\n        else {\n            // This might be the result of bad name attributes like \"[][foo]\",\n            // in this case the original `result` object will already be\n            // assigned to an object literal. Rather than coerce the object to\n            // an array, or cause an exception the attribute \"_values\" is\n            // assigned as an array.\n            result._values = result._values || [];\n            result._values.push(hash_assign(null, keys, value));\n        }\n\n        return result;\n    }\n\n    // Key is an attribute name and can be assigned directly.\n    if (!between) {\n        result[key] = hash_assign(result[key], keys, value);\n    }\n    else {\n        var string = between[1];\n        // +var converts the variable into a number\n        // better than parseInt because it doesn't truncate away trailing\n        // letters and actually fails if whole thing is not a number\n        var index = +string;\n\n        // If the characters between the brackets is not a number it is an\n        // attribute name and can be assigned directly.\n        if (isNaN(index)) {\n            result = result || {};\n            result[string] = hash_assign(result[string], keys, value);\n        }\n        else {\n            result = result || [];\n            result[index] = hash_assign(result[index], keys, value);\n        }\n    }\n\n    return result;\n}\n\n// Object/hash encoding serializer.\nfunction hash_serializer(result, key, value) {\n    var matches = key.match(brackets);\n\n    // Has brackets? Use the recursive assignment function to walk the keys,\n    // construct any missing objects in the result tree and make the assignment\n    // at the end of the chain.\n    if (matches) {\n        var keys = parse_keys(key);\n        hash_assign(result, keys, value);\n    }\n    else {\n        // Non bracket notation can make assignments directly.\n        var existing = result[key];\n\n        // If the value has been assigned already (for instance when a radio and\n        // a checkbox have the same name attribute) convert the previous value\n        // into an array before pushing into it.\n        //\n        // NOTE: If this requirement were removed all hash creation and\n        // assignment could go through `hash_assign`.\n        if (existing) {\n            if (!Array.isArray(existing)) {\n                result[key] = [ existing ];\n            }\n\n            result[key].push(value);\n        }\n        else {\n            result[key] = value;\n        }\n    }\n\n    return result;\n}\n\n// urlform encoding serializer\nfunction str_serialize(result, key, value) {\n    // encode newlines as \\r\\n cause the html spec says so\n    value = value.replace(/(\\r)?\\n/g, '\\r\\n');\n    value = encodeURIComponent(value);\n\n    // spaces should be '+' rather than '%20'.\n    value = value.replace(/%20/g, '+');\n    return result + (result ? '&' : '') + encodeURIComponent(key) + '=' + value;\n}\n\nmodule.exports = serialize;\n\n},{}],4:[function(require,module,exports){\nvar domify = require('domify')\r\nvar serialize = require('form-serialize')\r\nvar cloneDeep = require('deep-clone-simple')\r\n\r\n// Build DOM elements for the structure of the dialog\r\nvar buildDialogForm = function buildDialogForm (options) {\r\n  var form = document.createElement('form')\r\n  form.classList.add('vex-dialog-form')\r\n\r\n  var message = document.createElement('div')\r\n  message.classList.add('vex-dialog-message')\r\n  message.appendChild(options.message instanceof window.Node ? options.message : domify(options.message))\r\n\r\n  var input = document.createElement('div')\r\n  input.classList.add('vex-dialog-input')\r\n  input.appendChild(options.input instanceof window.Node ? options.input : domify(options.input))\r\n\r\n  form.appendChild(message)\r\n  form.appendChild(input)\r\n\r\n  return form\r\n}\r\n\r\n// Take an array of buttons (see the default buttons below) and turn them into DOM elements\r\nvar buttonsToDOM = function buttonsToDOM (buttons) {\r\n  var domButtons = document.createElement('div')\r\n  domButtons.classList.add('vex-dialog-buttons')\r\n\r\n  for (var i = 0; i < buttons.length; i++) {\r\n    var button = buttons[i]\r\n    var domButton = document.createElement('button')\r\n    domButton.type = button.type\r\n    domButton.textContent = button.text\r\n    domButton.className = button.className\r\n    domButton.classList.add('vex-dialog-button')\r\n    if (i === 0) {\r\n      domButton.classList.add('vex-first')\r\n    } else if (i === buttons.length - 1) {\r\n      domButton.classList.add('vex-last')\r\n    }\r\n    // Attach click listener to button with closure\r\n    (function (button) {\r\n      domButton.addEventListener('click', function (e) {\r\n        if (button.click) {\r\n          button.click.call(this, e)\r\n        }\r\n      }.bind(this))\r\n    }.bind(this)(button))\r\n\r\n    domButtons.appendChild(domButton)\r\n  }\r\n\r\n  return domButtons\r\n}\r\n\r\nvar plugin = function plugin (vex) {\r\n  // Define the API first\r\n  var dialog = {\r\n    // Plugin name\r\n    name: 'dialog',\r\n\r\n    // Open\r\n    open: function open (opts) {\r\n      var options = Object.assign({}, cloneDeep(this.defaultOptions), opts)\r\n\r\n      // `message` is unsafe internally, so translate\r\n      // safe default: HTML-escape the message before passing it through\r\n      if (options.unsafeMessage && !options.message) {\r\n        options.message = options.unsafeMessage\r\n      } else if (options.message) {\r\n        options.message = vex._escapeHtml(options.message)\r\n      }\r\n\r\n      // Build the form from the options\r\n      var form = options.unsafeContent = buildDialogForm(options)\r\n\r\n      // Open the dialog\r\n      var dialogInstance = vex.open(options)\r\n\r\n      if (options.yesText !== '') {\r\n        options.buttons[0].text = options.yesText\r\n      }\r\n\r\n      if (options.noText !== '') {\r\n        options.buttons[1].text = options.noText\r\n      }\r\n\r\n      // Quick comment - these options and appending buttons and everything\r\n      // would preferably be done _before_ opening the dialog. However, since\r\n      // they rely on the context of the vex instance, we have to do them\r\n      // after. A potential future fix would be to differentiate between\r\n      // a \"created\" vex instance and an \"opened\" vex instance, so any actions\r\n      // that rely on the specific context of the instance can do their stuff\r\n      // before opening the dialog on the page.\r\n\r\n      // Override the before close callback to also pass the value of the form\r\n      var beforeClose = options.beforeClose && options.beforeClose.bind(dialogInstance)\r\n      dialogInstance.options.beforeClose = function dialogBeforeClose () {\r\n        // Only call the callback once - when the validation in beforeClose, if present, is true\r\n        var shouldClose = beforeClose ? beforeClose() : true\r\n        if (shouldClose) {\r\n          options.callback(this.value || false)\r\n        }\r\n        // Return the result of beforeClose() to vex\r\n        return shouldClose\r\n      }.bind(dialogInstance)\r\n\r\n      // Append buttons to form with correct context\r\n      form.appendChild(buttonsToDOM.call(dialogInstance, options.buttons))\r\n\r\n      // Attach form to instance\r\n      dialogInstance.form = form\r\n\r\n      // Add submit listener to form\r\n      form.addEventListener('submit', options.onSubmit.bind(dialogInstance))\r\n\r\n      // Optionally focus the first input in the form\r\n      if (options.focusFirstInput) {\r\n        var el = dialogInstance.contentEl.querySelector('button, input, select, textarea')\r\n        if (el) {\r\n          el.focus()\r\n        }\r\n      }\r\n\r\n      // For chaining\r\n      return dialogInstance\r\n    },\r\n\r\n    // Alert\r\n    alert: function (options) {\r\n      // Allow string as message\r\n      if (typeof options === 'string') {\r\n        options = {\r\n          message: options\r\n        }\r\n      }\r\n      options = Object.assign({}, cloneDeep(this.defaultOptions), cloneDeep(this.defaultAlertOptions), options)\r\n      return this.open(options)\r\n    },\r\n\r\n    // Confirm\r\n    confirm: function (options) {\r\n      if (typeof options !== 'object' || typeof options.callback !== 'function') {\r\n        throw new Error('dialog.confirm(options) requires options.callback.')\r\n      }\r\n      options = Object.assign({}, cloneDeep(this.defaultOptions), cloneDeep(this.defaultConfirmOptions), options)\r\n      return this.open(options)\r\n    },\r\n\r\n    // Prompt\r\n    prompt: function (options) {\r\n      if (typeof options !== 'object' || typeof options.callback !== 'function') {\r\n        throw new Error('dialog.prompt(options) requires options.callback.')\r\n      }\r\n      var defaults = Object.assign({}, cloneDeep(this.defaultOptions), cloneDeep(this.defaultPromptOptions))\r\n      var dynamicDefaults = {\r\n        unsafeMessage: '<label for=\"vex\">' + vex._escapeHtml(options.label || defaults.label) + '</label>',\r\n        input: '<input name=\"vex\" type=\"text\" class=\"vex-dialog-prompt-input\" placeholder=\"' + vex._escapeHtml(options.placeholder || defaults.placeholder) + '\" value=\"' + vex._escapeHtml(options.value || defaults.value) + '\" />'\r\n      }\r\n      options = Object.assign(defaults, dynamicDefaults, options)\r\n      // Pluck the value of the \"vex\" input field as the return value for prompt's callback\r\n      // More closely mimics \"window.prompt\" in that a single string is returned\r\n      var callback = options.callback\r\n      options.callback = function promptCallback (value) {\r\n        if (typeof value === 'object') {\r\n          var keys = Object.keys(value)\r\n          value = keys.length ? value[keys[0]] : ''\r\n        }\r\n        callback(value)\r\n      }\r\n      return this.open(options)\r\n    }\r\n  }\r\n\r\n  // Now define any additional data that's not the direct dialog API\r\n  dialog.buttons = {\r\n    YES: {\r\n      text: 'OK',\r\n      type: 'submit',\r\n      className: 'vex-dialog-button-primary',\r\n      click: function yesClick () {\r\n        this.value = true\r\n      }\r\n    },\r\n\r\n    NO: {\r\n      text: 'Cancel',\r\n      type: 'button',\r\n      className: 'vex-dialog-button-secondary',\r\n      click: function noClick () {\r\n        this.value = false\r\n        this.close()\r\n      }\r\n    }\r\n  }\r\n\r\n  dialog.defaultOptions = {\r\n    callback: function () {},\r\n    afterOpen: function () {},\r\n    message: '',\r\n    input: '',\r\n    yesText: '',\r\n    noText: '',\r\n    buttons: [\r\n      dialog.buttons.YES,\r\n      dialog.buttons.NO\r\n    ],\r\n    showCloseButton: false,\r\n    onSubmit: function onDialogSubmit (e) {\r\n      e.preventDefault()\r\n      if (this.options.input) {\r\n        this.value = serialize(this.form, { hash: true })\r\n      }\r\n      return this.close()\r\n    },\r\n    focusFirstInput: true\r\n  }\r\n\r\n  dialog.defaultAlertOptions = {\r\n    buttons: [\r\n      dialog.buttons.YES\r\n    ]\r\n  }\r\n\r\n  dialog.defaultPromptOptions = {\r\n    label: 'Prompt:',\r\n    placeholder: '',\r\n    value: ''\r\n  }\r\n\r\n  dialog.defaultConfirmOptions = {}\r\n\r\n  return dialog\r\n}\r\n\r\nmodule.exports = plugin\r\n\n},{\"deep-clone-simple\":1,\"domify\":2,\"form-serialize\":3}]},{},[4])(4)\n});"]},"metadata":{},"sourceType":"script"}