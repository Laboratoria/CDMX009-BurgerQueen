{"ast":null,"code":"var _jsxFileName = \"/home/laboratoria143-am/Escritorio/Laboratoria/CDMX009-BurgerQueen/my-app/src/components/KitchenNotes/Note.js\";\nimport React, { useState, useEffect } from 'react';\nimport { db, auth } from '../../firebase';\nimport { v4 as uuidv4 } from 'uuid';\nimport Masonry from 'react-masonry-css';\nimport './Note.css';\n\nfunction Note() {\n  const [incoming, setIncoming] = useState([]);\n\n  const getOrders = () => {\n    return db.collection('orders').where(\"status\", \"==\", \"in progress\").orderBy('date', 'desc').onSnapshot(querySnapshot => {\n      const docs = [];\n      querySnapshot.forEach(doc => {\n        docs.push({ ...doc.data(),\n          id: doc.id\n        });\n      });\n      setIncoming(docs);\n    });\n  };\n\n  useEffect(() => {\n    let unsubscribe = getOrders();\n    return () => {\n      unsubscribe();\n    };\n  }, []);\n\n  const updateOrder = id => {\n    db.collection('orders').doc(id).update({\n      status: \"done\"\n    }).then(() => {\n      alert('un meserx ser치 notificado :)');\n    }).catch(() => {\n      alert('Ocurri칩 un error, intentalo de nuevo en un momento');\n    });\n  };\n\n  let incomingOrders = incoming.map(order => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"notes\",\n      key: order.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }, \" Mesa \", order.table), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }, \" Meserx: \", order.waiter), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"green\",\n      onClick: () => {\n        console.log(order);\n        updateOrder(order.id);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }, \"Orden lista!\"));\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Masonry, {\n    breakpointCols: 3,\n    className: \"my-masonry-grid\",\n    columnClassName: \"my-masonry-grid_column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, incomingOrders));\n}\n\nexport default Note;","map":{"version":3,"sources":["/home/laboratoria143-am/Escritorio/Laboratoria/CDMX009-BurgerQueen/my-app/src/components/KitchenNotes/Note.js"],"names":["React","useState","useEffect","db","auth","v4","uuidv4","Masonry","Note","incoming","setIncoming","getOrders","collection","where","orderBy","onSnapshot","querySnapshot","docs","forEach","doc","push","data","id","unsubscribe","updateOrder","update","status","then","alert","catch","incomingOrders","map","order","table","waiter","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,EAAT,EAAaC,IAAb,QAAyB,gBAAzB;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAO,YAAP;;AAEA,SAASC,IAAT,GAAe;AAEX,QAAM,CAAEC,QAAF,EAAYC,WAAZ,IAA4BT,QAAQ,CAAC,EAAD,CAA1C;;AAEA,QAAMU,SAAS,GAAG,MAAK;AACnB,WAAOR,EAAE,CACRS,UADM,CACK,QADL,EAENC,KAFM,CAEA,QAFA,EAEU,IAFV,EAEgB,aAFhB,EAGNC,OAHM,CAGE,MAHF,EAGU,MAHV,EAINC,UAJM,CAIMC,aAAD,IAAmB;AAC3B,YAAMC,IAAI,GAAG,EAAb;AACAD,MAAAA,aAAa,CAACE,OAAd,CAAuBC,GAAD,IAAS;AAC3BF,QAAAA,IAAI,CAACG,IAAL,CAAU,EAAC,GAAGD,GAAG,CAACE,IAAJ,EAAJ;AAAgBC,UAAAA,EAAE,EAAEH,GAAG,CAACG;AAAxB,SAAV;AACH,OAFD;AAGAZ,MAAAA,WAAW,CAACO,IAAD,CAAX;AACH,KAVM,CAAP;AAWH,GAZD;;AAcAf,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIqB,WAAW,GAAGZ,SAAS,EAA3B;AAEA,WAAO,MAAM;AACTY,MAAAA,WAAW;AACd,KAFD;AAGD,GANM,EAMJ,EANI,CAAT;;AAQA,QAAMC,WAAW,GAAIF,EAAD,IAAQ;AACxBnB,IAAAA,EAAE,CACDS,UADD,CACY,QADZ,EAECO,GAFD,CAEKG,EAFL,EAGCG,MAHD,CAGQ;AACJC,MAAAA,MAAM,EAAE;AADJ,KAHR,EAMCC,IAND,CAMM,MAAM;AACRC,MAAAA,KAAK,CAAC,8BAAD,CAAL;AACH,KARD,EASCC,KATD,CASO,MAAK;AACRD,MAAAA,KAAK,CAAC,oDAAD,CAAL;AACH,KAXD;AAYH,GAbD;;AAeA,MAAIE,cAAc,GAAGrB,QAAQ,CAACsB,GAAT,CAAcC,KAAK,IAAI;AACxC,wBACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAuB,MAAA,GAAG,EAAEA,KAAK,CAACV,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAA6BU,KAAK,CAACC,KAAnC,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAaD,KAAK,CAACE,MAAnB,CAFJ,eAII;AAAQ,MAAA,SAAS,EAAC,OAAlB;AAA0B,MAAA,OAAO,EAAE,MAAM;AAACC,QAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AAAoBR,QAAAA,WAAW,CAACQ,KAAK,CAACV,EAAP,CAAX;AAAsB,OAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJJ,CADJ;AAQH,GAToB,CAArB;AAWA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD;AACI,IAAA,cAAc,EAAE,CADpB;AAEI,IAAA,SAAS,EAAC,iBAFd;AAGI,IAAA,eAAe,EAAC,wBAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAISQ,cAJT,CADJ,CADJ;AAUH;;AAED,eAAetB,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { db, auth } from '../../firebase'\nimport { v4 as uuidv4 } from 'uuid'\nimport Masonry from 'react-masonry-css'\nimport './Note.css'\n\nfunction Note(){\n\n    const [ incoming, setIncoming ] = useState([])\n\n    const getOrders = () =>{\n        return db\n        .collection('orders')\n        .where(\"status\", \"==\", \"in progress\")\n        .orderBy('date', 'desc')\n        .onSnapshot((querySnapshot) => {\n            const docs = []\n            querySnapshot.forEach((doc) => {\n                docs.push({...doc.data(), id: doc.id})\n            })\n            setIncoming(docs)\n        })\n    } \n\n    useEffect(() => {\n        let unsubscribe = getOrders()\n\n        return () => {\n            unsubscribe()\n        }\n      }, []);\n\n    const updateOrder = (id) => {\n        db    \n        .collection('orders')\n        .doc(id)\n        .update({\n            status: \"done\"\n        })\n        .then(() => {\n            alert('un meserx ser치 notificado :)')\n        })\n        .catch(() =>{\n            alert('Ocurri칩 un error, intentalo de nuevo en un momento')\n        })   \n    }\n\n    let incomingOrders = incoming.map( order => {\n        return (\n            <div className=\"notes\" key={order.id}>\n                <h2 className=\"table\"> Mesa {order.table}</h2>\n                <p> Meserx: {order.waiter}</p>\n\n                <button className=\"green\" onClick={() => {console.log(order); updateOrder(order.id)}}>Orden lista!</button>\n            </div>\n        )\n    })\n    \n    return(\n        <div className='container'>\n            <Masonry\n                breakpointCols={3}\n                className=\"my-masonry-grid\"\n                columnClassName=\"my-masonry-grid_column\">\n                    {incomingOrders}\n            </Masonry>\n        </div>\n    )\n}\n\nexport default Note"]},"metadata":{},"sourceType":"module"}